Semantics:

Only pawns can promote

Knight invalid move: Ncc6 
	A knight in the c file cannot move to the same file.
	A knight can only move two files/rank apart
	
Pawns can only capture the adjacent files
	exd5 valid, exh8 invalid.
	


	
	
1. d4 c6 2. c4 Nf6 3. Nc3


RBNQKBNR
PPPPPPPP
        
        
		
pppppppp		
rbnqkbnr


Design:

doGetMoves always allocates a new Set<MoveVector>. Is it mandatory to have a template method?
Couldn't the subclass simply populate and unmodifiable set?


To Implement:

OK! King moves
OK! Queen moves
OK! En passant capture 
OK! Add exception when a move is requested for a color that is not in the turn to play.
OK! Create a command specific to pawns, so that we can treat enpassant movements easily.
	Not needed.
OK! Test pawnMove Command (Set enpassant)
OK! Test knight move command (and capture)
OK! Create an executor class to execute the getMoves method (Change it to an interface).

LexicalStateCollection: Add desambiguation for pawn moves. We could use the PawnFileState or DestinationSquareState to get the origin square for a pawn command.
LexicalStateCollection is in need for some serious refactoring. (GetDesambiguationFile)
LexicalStateCollection. How could I use the Optional.ofNullable to remove the null checks from getDesambiguationFile and getDesambiguationRank
Refactor the checkmate analyser and maybe use some functional api.
Remove the checking for attacking || both and movement || both. Encapsulate this logic inside the enum.
Use java curry in something. please....
change direction to a type and then make chessfile understand it. simplify things for gods sake.
MoveVector is growing. Do something about it?
fix assertContains and assertEquals(Size, ridiculous)
File and Rank desambiguation
Test castleCommands
The strategies for each piece are passed via a static init (ugh!)
The prerequisites inside moveVector should not reside there. The flip method breaks the immutability











FENBoard = "8/3R4/1k6/1p6/p1pP3p/P1P1p1P1/1n2K2P/8 b - - 0 45";


ChessBoardCell cell
{
	CellColor color;
	ChessPiece piece; (Nulo em caso de estar vazia)
}
ChessBoard c;
Matriz de células.

br bn bb bq bk bb bn [br] -> [8, 0]
[wp] wp wp wp wp wp wp wp -> [0, 1]
__ __ __ __ __ __ __ __
__ __ __ __ __ __ __ __
__ __ __ __ __ __ __ __
__ __ __ __ __ __ __ __
bp bp bp bp bp bp bp bp
br bn bb bk bq bb bn [br] -> [8, 8]

c[0,0] = KNIGHT 

Tamanho -> Gráfico





Interpreter API:

URL: https://2od867bsib.execute-api.us-west-2.amazonaws.com/prod


Example payload: 
{
	"fenBoard" : "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1",
	"pgnCommand" : "e4"
}